
========================
=  Mapper 076          =
========================


Example Games:
--------------------------
Digital Devil Story - Megami Tensei


Notes:
---------------------------
PRG Swapping on this mapper defies logic.  I don't know if this is accurate, but it appears to work.


Registers:
---------------------------

Range,Mask:   $8000-FFFF, $E001


  $8000:  [.P.. .AAA]
    P = PRG register select (see PRG setup)
    A = Address for use with $8001


  $8001:  [DDDD DDDD]    Data port:
      R:2 ->  CHR reg 0  (2k @ $0000)
      R:3 ->  CHR reg 1  (2k @ $0800)
      R:4 ->  CHR reg 2  (2k @ $1000)
      R:5 ->  CHR reg 3  (2k @ $1800)
      R:6 ->  PRG reg 0 or 2  (depending on 'P' bit in $8000)
      R:7 ->  PRG reg 1


  $A000:  [.... ...M]
    Mirroring:  0=Vert
                1=Horz

CHR Setup:
---------------------------

      $0000   $0400   $0800   $0C00   $1000   $1400   $1800   $1C00 
    +---------------+---------------+---------------+---------------+
    |      R:2      |      R:3      |      R:4      |      R:5      |
    +---------------+---------------+---------------+---------------+


PRG Setup:
---------------------------

R:6 actually seems to access two seperate regs.  Therefore, unlike the typical MMC3-style setup, $8000 and
$C000 are both independently selectable.  When R:6 is written to, the 'P' bit determines which reg gets
changed:

P=0:  PRG reg 0  (8k @ $8000 --  "R:6a" below)
P=1:  PRG reg 2  (8k @ $C000 --  "R:6b" below)

      $8000   $A000   $C000   $E000  
    +-------+-------+-------+-------+
    |  R:6a |  R:7  |  R:6b | { -1} |
    +-------+-------+-------+-------+



Powerup:
---------------------------

R:6b seems to be reset to $FE on powerup.  The game does rely on this.
